////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Base.hpp
// Robert M. Baker | Created : 15FEB12 | Last Modified : 11MAR12 by Robert M. Baker
// Version : 1.0.0
// This is the base header file for 'Game'; it defines data common to all modules.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
  * @file
  * @author  Robert M. Baker
  * @date    Created : 15FEB12
  * @date    Last Modified : 11MAR12 by Robert M. Baker
  * @version 1.0.0
  *
  * @brief This header file defines data common to all modules.
  *
  * @section Description
  *
  * This header file defines data common to all modules.
  */

#ifndef __QMX_GAME_BASE_HPP_
#define __QMX_GAME_BASE_HPP_

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Header Files
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <exception>
#include <fstream>
#include <sstream>
#include <string>
#include <unordered_map>
#include <vector>
#include <fmod/fmod.h>
#include <GL/glew.h>
#include <GL/glfw.h>
#include <freeimage/FreeImage.h>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Dynamic Macros
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define AUDIOMANAGER_DEF_MAX_CHANNELS   100
#define AUDIOMANAGER_DEF_INIT_FLAGS     FMOD_INIT_NORMAL
#define AUDIOMANAGER_DEF_MODE           ( FMOD_LOOP_NORMAL | FMOD_2D | FMOD_HARDWARE )
#define AUDIOMANAGER_DEF_VOLUME         1.0f
#define AUDIOMANAGER_DEF_PITCH          1.0f
#define AUDIOMANAGER_DEF_PAN            0.0f
#define AUDIOMANAGER_DEF_LOOP_COUNT     0
#define AUDIOMANAGER_DEF_PRIORITY       128
#define AUDIOMANAGER_DEF_CHANNEL_INDEX  FMOD_CHANNEL_FREE

#define VIDEOMANAGER_DEF_WIDTH          800
#define VIDEOMANAGER_DEF_HEIGHT         600
#define VIDEOMANAGER_DEF_IS_FULLSCREEN  false

#ifdef __BIG_ENDIAN__
#	define VIDEOMANAGER_CFG_PIXEL_FORMAT GL_RGBA
#else
#	define VIDEOMANAGER_CFG_PIXEL_FORMAT GL_BGRA
#endif // VIDEOMANAGER_CFG_PIXEL_FORMAT

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Static Macros
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define PURE_VIRTUAL         0
#define ZERO_MEMORY(x,y)     memset( x, Game::Null, y )
#define ZERO_ARRAY(x)        memset( x, Game::Null, sizeof( x ) )
#define SAFE_DELETE(x)       delete x;  x = nullptr;
#define SAFE_DELETE_ARRAY(x) delete[] x;  x = nullptr;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Start of the 'Game' Namespace
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
  * @brief This is the base Game namespace.
  */

namespace Game
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Type Definitions
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef double real_t;
typedef std::unordered_map< std::string, uint32_t > UInt32Map;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Anonymous Enumerations
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum
{
	NoCode,
	Success,
	Failure,
	Done,
	Aborted,
	Standby,
	Uninitialized,
	Unsupported,
	OutOfRange,
	Unoptimized,
	AlreadyExists,
	DoesNotExist
};

enum
{
	Null = 0,
	Toggle = -1,
	True = 1,
	False = 0,
	On = 1,
	Off = 0,
	Yes = 1,
	No = 0,
	Active = 1,
	Inactive = 0
};

} // 'Game' Namespace

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// End of the 'Game' Namespace
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // __QMX_GAME_BASE_HPP_

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// End of 'Base.hpp'
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
